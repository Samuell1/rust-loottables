type Category @model {
  id: ID! @isUnique
  loots: [Loot!]! @relation(name: "LootOnCategory")
  name: String!
}

type Changelog @model {
  date: DateTime!
  description: String
  id: ID! @isUnique
}

type Crate @model {
  description: String
  file: File @relation(name: "CrateOnFile")
  id: ID! @isUnique
  loots: [Loot!]! @relation(name: "LootOnCrate")
  name: String!
}

type File @model {
  contentType: String!
  crates: [Crate!]! @relation(name: "CrateOnFile")
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type Loot @model {
  amount: String
  blueprint: Boolean @defaultValue(value: false)
  category: Category @relation(name: "LootOnCategory")
  condition: String
  crate: Crate @relation(name: "LootOnCrate")
  dataId: String!
  id: ID! @isUnique
  name: String
  percentage: Float
}

type User @model {
  createdAt: DateTime!
  id: ID! @isUnique
  isVerified: Boolean! @defaultValue(value: false)
  secret: String @isUnique
  updatedAt: DateTime!
}